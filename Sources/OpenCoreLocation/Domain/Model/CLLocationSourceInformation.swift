import Foundation

/// Contains metadata about the source of a location, including whether it was generated by a simulator or an external accessory.
/// [Apple Documentation](https://developer.apple.com/documentation/corelocation/cllocationsourceinformation)
open class CLLocationSourceInformation: NSObject, NSCopying, NSSecureCoding {

    // MARK: - Properties

    /// Indicates whether the location was generated by a software simulator, such as Xcode.
    ///
    /// [Apple Documentation](https://developer.apple.com/documentation/corelocation/cllocationsourceinformation/issimulatedbysoftware)
    public let isSimulatedBySoftware: Bool

    /// Indicates whether the location was generated by an external accessory, such as CarPlay or an MFi accessory.
    ///
    /// [Apple Documentation](https://developer.apple.com/documentation/corelocation/cllocationsourceinformation/isproducedbyaccessory)
    public let isProducedByAccessory: Bool

    // MARK: - NSSecureCoding Conformance

    /// Indicates that `CLLocationSourceInformation` supports secure coding.
    /// [Apple Documentation](https://developer.apple.com/documentation/foundation/nssecurecoding)
    public static let supportsSecureCoding: Bool = true

    // MARK: - Initialization

    /// Creates a `CLLocationSourceInformation` instance with the specified source metadata.
    /// - Parameters:
    ///   - isSoftware: `true` if the location was generated by a software simulator, otherwise `false`.
    ///   - isAccessory: `true` if the location was generated by an external accessory, otherwise `false`.
    /// [Apple Documentation](https://developer.apple.com/documentation/corelocation/cllocationsourceinformation/init(softwaresimulationstate:andexternalaccessorystate:))
    public init(softwareSimulationState isSoftware: Bool, andExternalAccessoryState isAccessory: Bool) {
        self.isSimulatedBySoftware = isSoftware
        self.isProducedByAccessory = isAccessory
    }

    // MARK: - NSCopying Conformance

    /// Creates a copy of this `CLLocationSourceInformation` instance.
    /// - Returns: A new `CLLocationSourceInformation` object with the same properties.
    /// [Apple Documentation](https://developer.apple.com/documentation/foundation/nscopying)
    public func copy(with zone: NSZone? = nil) -> Any {
        return CLLocationSourceInformation(softwareSimulationState: isSimulatedBySoftware,
                                           andExternalAccessoryState: isProducedByAccessory)
    }

    // MARK: - NSSecureCoding Conformance

    /// Initializes a `CLLocationSourceInformation` from an `NSCoder`.
    /// - Parameter coder: The `NSCoder` instance used to decode the properties.
    public required init?(coder: NSCoder) {
        self.isSimulatedBySoftware = coder.decodeBool(forKey: "isSimulatedBySoftware")
        self.isProducedByAccessory = coder.decodeBool(forKey: "isProducedByAccessory")
    }

    /// Encodes this `CLLocationSourceInformation` into an `NSCoder`.
    /// - Parameter coder: The `NSCoder` instance used to encode the properties.
    public func encode(with coder: NSCoder) {
        coder.encode(isSimulatedBySoftware, forKey: "isSimulatedBySoftware")
        coder.encode(isProducedByAccessory, forKey: "isProducedByAccessory")
    }
}
